{
  "compilerOptions": {
    "lib": [
      "es2021",
      "dom"
    ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
    "rootDir": "./src" /* Specify the root folder within your source files. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "types": [
      "node"
    ] /* Specify type package names to be included without being referenced in a source file. */,
    "resolveJsonModule": true /* Enable importing .json files. */,
    // "baseUrl": "./" /* Specify the base directory to resolve non-relative module names. */,
    // "paths": {} /* Specify a set of entries that re-map imports to additional lookup locations. */,
    "declaration": true /* Concatenate & emit output to single file.*/,
    "declarationDir": "dist/types" /* Specify the output directory for generated declaration files. */,
    "strict": true /* Enable all strict type-checking options. */,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,

    /* Interop Constraints */
    "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Build Options */
    "target": "es2021" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "module": "es2022" /* Specify what module code is generated. */,
    "outDir": "dist/esm" /* Redirect output to the directory. */
  },
  "include": ["src/**/*", "types/**/*", "script/check-filenames.ts"],
  "ts-node": {
    // ts-node config
    "esm": true // Tell ts-node CLI to install the --loader automatically, explained below
  }
}
